generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model business {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description  String?        @db.VarChar(255)
  name         String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  user_id      String         @db.Uuid
  tenant_id    String         @db.VarChar(255)
  user         user           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  inventory    inventory[]
  product      product[]
  supply_chain supply_chain[]
}

model inventory {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id  String   @db.Uuid
  business_id String   @db.Uuid
  quantity    Int
  status      String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  business    business @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  product     product  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model order {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status     String   @db.VarChar(255)
  quantity   Int
  user_id    String   @db.Uuid
  product_id String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  product    product  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model product {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String         @db.VarChar(255)
  description  String?        @db.VarChar(255)
  quantity     Int
  status       String         @db.VarChar(255)
  business_id  String         @db.Uuid
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  inventory    inventory[]
  order        order[]
  business     business       @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  supply_chain supply_chain[]
}

model supply_chain {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business_id String   @db.Uuid
  product_id  String   @db.Uuid
  status      String   @db.VarChar(255)
  quantity    Int
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  business    business @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  product     product  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  business    business[]
  order       order[]
}
